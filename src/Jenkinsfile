pipeline {
    agent any

    stages {
        // checkout de master, based on jenkins configuration
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // builds the java project
        stage('Build') {
            steps {
                git url: 'https://github.com/cyrille-leclerc/multi-module-maven-project'
                withMaven(
                     // Maven installation declared in the Jenkins "Global Tool Configuration"
                     maven: 'maven-3', // (1)
                     // Use `$WORKSPACE/.repository` for local repository folder to avoid shared repositories
                     mavenLocalRepo: '.repository', // (2)
                     // Maven settings.xml file defined with the Jenkins Config File Provider Plugin
                     // We recommend to define Maven settings.xml globally at the folder level using
                     // navigating to the folder configuration in the section "Pipeline Maven Configuration / Override global Maven configuration"
                     // or globally to the entire master navigating to  "Manage Jenkins / Global Tools Configuration"
                     mavenSettingsConfig: 'my-maven-settings' // (3)
                ) {
                    sh "mvn clean verify"
                }
                sh 'mvn clean install'
            }
        }

        // runs the unit tests
        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }

            post {
                always {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }
        }

        // Run integration tests
        stage('Integration Test') {
            steps {
                println 'test'
                //sh 'mvn verify -Pintegration-test'
            }

            post {
                always {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }
        }
    }
}