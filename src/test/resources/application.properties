### Security ###
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=catalogservice
springdoc.swagger-ui.oauth.client-secret=uIATId9GPbllMf3Rlv33hcrVQrAnw4lm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/BookApplication/protocol/openid-connect/certs
### Database ###
spring.sql.init.mode=always
spring.sql.init.platform=h2
spring.sql.init.schema-locations=classpath*:db/h2migration/*
spring.datasource.url=jdbc:h2:mem:bookCatalog;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.flyway.enabled=false
### RABBITMQ ###
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
catalog.rabbitmq.queue.routing.key=catalog.queue.routing.key
catalog.rabbitmq.queue.exchange=catalog.queue.exchange
catalog.rabbitmq.queue-update-book-stock=catalog.queue.update-book-stock
catalog.queue.update-book-stock-exchange=catalog.queue.update-book-stock-exchange
catalog.queue.catalog.queue.update-book-stock-routing-key=catalog.queue.catalog.queue.update-book-stock-routing-key
catalog.rabbitmq.queue-book-stock-request=stock.queue.book-stock-request